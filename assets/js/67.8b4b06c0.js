(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{360:function(v,_,n){"use strict";n.r(_);var r=n(0),t=Object(r.a)({},(function(){var v=this,_=v.$createElement,n=v._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[n("blockquote",[n("p",[v._v("魔方构造：6个面 3个面角块（8个） 2个面棱块（12）四个中心块,中心块什么颜色，\n那么最终这个面就是这个颜色，中心块的相对位置是固定的（黄色对面永远是白色，绿色对面永远蓝色..）")])]),v._v(" "),n("ol",[n("li",[v._v("白色十字、十字侧面颜色，棱的侧面颜色和中心块颜色是同色的")])]),v._v(" "),n("p",[v._v("1）四个白色棱块对到对面去，包围着黄色，形成一朵小花"),n("br"),v._v("\n2）四个白色棱块侧面颜色和中间块颜色调整一致，然后转到白色中心块的位置")]),v._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[v._v("白色面、T字型")])]),v._v(" "),n("p",[v._v("白色角块在底部（不在底部先调整到底部），并且白色侧面在左侧或者右侧，"),n("br"),v._v("\n比如白橙蓝，将这个小角块移动到橙蓝所夹的角的下面位置，"),n("br"),v._v("\n然后将目标位下到底部接应这个角块，旋转底层，让它归位，回复即可")]),v._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[v._v("对好第二层（远、切、回、回、接孩子）")])]),v._v(" "),n("p",[v._v("魔方的顶层找到属于第二层的棱色块（不属于黄色的棱色块一定属于第二层），"),n("br"),v._v("\n比如橙色，旋转顶层将橙色对成一排使得中间三个色块同色")]),v._v(" "),n("p",[v._v("蓝橙棱块远离目标位置，"),n("br"),v._v("\n底面白色一排色块切开三个一排的色块的面（目标位面），"),n("br"),v._v("\n第一步的回来，\n第二步的回来，\n孩子（对好的两个色块）到车站（靠近目标位的方向旋转）"),n("br"),v._v("\n-车开过来（目标位旋转上来接应）"),n("br"),v._v("\n-上车（对好的色块旋转到目标位）"),n("br"),v._v("\n-车开回去（回复）")]),v._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[v._v("黄色十字（黄色单点、小拐弯、一排）")])]),v._v(" "),n("p",[v._v("前提：摆放位置（单点随便）小拐弯（正对）一排（平行）"),n("br"),v._v("\n1）旋转前面，让底层三个白色到左边来"),n("br"),v._v("\n2）旋转右面，让底部两个白色到前面来"),n("br"),v._v("\n3）顶层对好的色块远离我们"),n("br"),v._v("\n4）2）回复"),n("br"),v._v("\n5）3）回复"),n("br"),v._v("\n6）1）回复")]),v._v(" "),n("ol",{attrs:{start:"5"}},[n("li",[v._v("黄色面\n摆放位置：鱼头远离你的位置，2后4左（都用小鱼1）")])]),v._v(" "),n("p",[v._v("1）小鱼1（鱼头旁边黄色块在右侧）"),n("br"),v._v("\n旋转右面，底层三个白色到后面去（鱼头不能被破坏），"),n("br"),v._v("\n顶层向鱼头方向转，"),n("br"),v._v("\n回复第一步，\n顶层再同方向转90度，\n让刚才回去的两个白色在旋转到后面去，"),n("br"),v._v("\n顶层转180度，"),n("br"),v._v("\n回复白色块")]),v._v(" "),n("p",[v._v("2）小鱼2（鱼头旁边黄色块在左侧）")]),v._v(" "),n("p",[v._v("小鱼1的镜像操作")]),v._v(" "),n("ol",{attrs:{start:"6"}},[n("li",[v._v("调整顶层四个角的顺序，每个角的侧面都是对齐的")])]),v._v(" "),n("p",[v._v("1）找到一条两角同色的边（只能找到一条），四条两个同色的边是已经对好了，旋转一下即可\n摆放位置：顶部的黄色面转到前面来，两角同色边放在右面"),n("br"),v._v("\n旋转右面180度，让3个白色到前面来，"),n("br"),v._v("\n旋转底面180度，让2个白色到前面来，形成反向L型白色，"),n("br"),v._v("\n让3个白色暂时到底部去，"),n("br"),v._v("\n让后面的两个白色转到左边去，"),n("br"),v._v("\n回复3个白色转到前面来，形成反向L，"),n("br"),v._v("\n旋转底面，让两个白色回到后面去，"),n("br"),v._v("\n让3个白色转到底面去，"),n("br"),v._v("\n让左边2个白色回复到后面去，"),n("br"),v._v("\n底面3个白色回到后面去")]),v._v(" "),n("p",[v._v("2）找不到一条两角同色的边\n操作两遍步骤1）")]),v._v(" "),n("ol",{attrs:{start:"7"}},[n("li",[v._v("完成魔方")])]),v._v(" "),n("p",[v._v("1）有一个面已经完成，其他三个面需要逆时针3轮换"),n("br"),v._v("\n摆放位置：完成的面会被黄色切开"),n("br"),v._v("\n小鱼1，魔方转180度，小鱼2"),n("br"),v._v("\n2）有一个面已经完成，其他三个面需要顺时针3轮换"),n("br"),v._v("\n摆放位置：完成的面会被黄色切开"),n("br"),v._v("\n小鱼2，魔方转180度，小鱼1"),n("br"),v._v("\n3）十字对换"),n("br"),v._v("\n使用1），然后变为1）2）的两种情况之一"),n("br"),v._v("\n4）相邻侧面两两对换"),n("br"),v._v("\n使用1），然后变为1）2）的两种情况之一")])])}),[],!1,null,null,null);_.default=t.exports}}]);